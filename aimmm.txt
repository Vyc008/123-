local keyRequired = "aimbotex"
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local SoundService = game:GetService("SoundService")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")
local FOV_RADIUS = 100
local aiming, showFOV, softMode, wallCheck, teamCheck, rainbowFOV = false, false, false, false, true, false
local instantAim = true
local temporaryNoFOV = false
local lastTarget = nil
local aimPart = "Head"
local hue = 0

-- Strength slider parameters
local strengthMin, strengthMax = 0.1, 1
local aimStrength = 0.1

-- Prediction slider parameters
local predictionMin, predictionMax = 0, 0.35
local predictionStrength = 0.0

-- Prioritize values
local prioritizeModes = {"default", "nearest", "low hp", "high hp"}
local prioritizeIndex = 1

-- Fullbright
local fullbrightOn = false
local fullbrightSettings = {
    Ambient = Color3.new(1,1,1),
    Brightness = 5,
    ColorShift_Bottom = Color3.new(1,1,1),
    ColorShift_Top = Color3.new(1,1,1),
    OutdoorAmbient = Color3.new(1,1,1),
    FogEnd = 100000
}
local origLighting = {}

-- sound on correct
local correctSound = Instance.new("Sound")
correctSound.SoundId = "rbxassetid://12221967"
correctSound.Volume = 0.5
correctSound.Parent = SoundService

local function createRobloxNotification(text, color)
    local notificationGui = Instance.new("ScreenGui")
    notificationGui.Name = "Notification"
    notificationGui.ResetOnSpawn = false
    notificationGui.Parent = game:GetService("CoreGui")

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 200, 0, 50)
    frame.Position = UDim2.new(1, -220, 0, 20)
    frame.BackgroundColor3 = color
    frame.BorderSizePixel = 0
    frame.BackgroundTransparency = 0.3
    frame.Parent = notificationGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, -20, 1, -10)
    textLabel.Position = UDim2.new(0, 10, 0, 5)
    textLabel.Text = text
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.TextSize = 14
    textLabel.BackgroundTransparency = 1
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.Parent = frame

    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.new(1, 1, 1)
    stroke.Thickness = 1
    stroke.Parent = frame

    frame.Position = UDim2.new(1, 0, 0, 20)
    frame:TweenPosition(UDim2.new(1, -220, 0, 20), "Out", "Quad", 0.3, true)
    delay(3, function()
        frame:TweenPosition(UDim2.new(1, 0, 0, 20), "Out", "Quad", 0.3, true, function()
            notificationGui:Destroy()
        end)
    end)
end
        
-- Main script
        local gui = Instance.new("ScreenGui", game.CoreGui)
        gui.Name = "InstantAimGUI"
        gui.ResetOnSpawn = false
        
        local mainContainer = Instance.new("Frame", gui)
        mainContainer.Size = UDim2.new(0, 330, 0, 450)
        mainContainer.Position = UDim2.new(0, 10, 0, 10)
        mainContainer.BackgroundTransparency = 1
        mainContainer.ClipsDescendants = true
        
        local scrollingFrame = Instance.new("ScrollingFrame", mainContainer)
        scrollingFrame.Size = UDim2.new(1, 0, 1, 0)
        scrollingFrame.Position = UDim2.new(0, 0, 0, 0)
        scrollingFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        scrollingFrame.BorderSizePixel = 2
        scrollingFrame.ScrollBarThickness = 6
        scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 500)
        
        local panel = Instance.new("Frame", scrollingFrame)
        panel.Size = UDim2.new(1, -10, 0, 500)
        panel.Position = UDim2.new(0, 5, 0, 5)
        panel.BackgroundTransparency = 1
        
        local function style(obj)
            obj.Font = Enum.Font.Legacy
            obj.TextColor3 = Color3.new(1,1,1)
            obj.TextStrokeColor3 = Color3.new(0,0,0)
            obj.TextStrokeTransparency = 0
        end
        
        local title = Instance.new("TextLabel", panel)
        title.Size = UDim2.new(1, 0, 0, 25)
        title.BackgroundTransparency = 1
        title.Text = "INSTANT AIM"
        style(title)
        title.TextSize = 18
        
        local function newBtn(text, pos, sizeX, sizeY)
            local b = Instance.new("TextButton", panel)
            b.Size = UDim2.new(0, sizeX or 100, 0, sizeY or 25)
            b.Position = pos
            b.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            style(b)
            b.Text = text
            b.TextSize = 12
            b.BorderSizePixel = 1
            return b
        end
        
        local function newLabel(text, pos)
            local l = Instance.new("TextLabel", panel)
            l.Size = UDim2.new(0, 200, 0, 20)
            l.Position = pos
            l.BackgroundTransparency = 1
            style(l)
            l.Text = text
            l.TextSize = 12
            l.TextXAlignment = Enum.TextXAlignment.Left
            return l
        end
        
        -- Aimbot Controls
        local btnAim = newBtn("Aimbot: OFF", UDim2.new(0, 5, 0, 30))
        local btnFOV = newBtn("FOV: OFF", UDim2.new(0, 5, 0, 60))
        local btnSoft = newBtn("Soft: OFF", UDim2.new(0, 5, 0, 90))
        local btnWall = newBtn("Wall: OFF", UDim2.new(0, 5, 0, 120))
        local btnTeam = newBtn("TeamCheck: ON", UDim2.new(0, 5, 0, 150))
        local btnFullbright = newBtn("Bright: OFF", UDim2.new(0, 180, 0, 150), 115, 25)
        btnFullbright.TextSize = 14
        btnFullbright.BackgroundColor3 = Color3.fromRGB(190, 140, 90)
        btnFullbright.BorderSizePixel = 2

        local btnRainbowFOV = newBtn("RGB Fov: OFF", UDim2.new(0, 5, 0, 180))
        local btnInstantAim = newBtn("Insta Aim: ON", UDim2.new(0, 5, 0, 210))
        local btnFOVPlus = newBtn("+", UDim2.new(0, 115, 0, 60), 25, 25)
        local btnFOVMinus = newBtn("-", UDim2.new(0, 145, 0, 60), 25, 25)
        local btnHead = newBtn("Aim: Head", UDim2.new(0, 115, 0, 90))
        local btnTorso = newBtn("Aim: Torso", UDim2.new(0, 220, 0, 90))
        local btnHRP = newBtn("Aim: HRP", UDim2.new(0, 115, 0, 120))
        local btnEspMenu = newBtn("OPEN ESP MENU", UDim2.new(0, 5, 0, 240), 300, 30)

        -- Botão de minimizar (círculo roxo com "L" branco)
        local btnMin = Instance.new("ImageButton", panel)
        btnMin.Name = "btnMin"
        btnMin.Size = UDim2.new(0, 25, 0, 25)
        btnMin.Position = UDim2.new(0, 295, 0, 0)
        btnMin.BackgroundTransparency = 1
        btnMin.BorderSizePixel = 0
        btnMin.AutoButtonColor = true
        btnMin.Image = ""

        local minCircle = Instance.new("Frame", btnMin)
        minCircle.Name = "MinCircle"
        minCircle.AnchorPoint = Vector2.new(0.5, 0.5)
        minCircle.Position = UDim2.new(0.5, 0, 0.5, 0)
        minCircle.Size = UDim2.new(1, 0, 1, 0)
        minCircle.BackgroundColor3 = Color3.fromRGB(120, 0, 255)
        minCircle.BorderSizePixel = 0
        local minCorner = Instance.new("UICorner", minCircle)
        minCorner.CornerRadius = UDim.new(1, 0)

        local minLabel = Instance.new("TextLabel", btnMin)
        minLabel.Name = "MinLabel"
        minLabel.AnchorPoint = Vector2.new(0.5, 0.5)
        minLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
        minLabel.Size = UDim2.new(1, 0, 1, 0)
        minLabel.BackgroundTransparency = 1
        minLabel.Text = "L"
        minLabel.TextColor3 = Color3.new(1, 1, 1)
        minLabel.TextScaled = true
        minLabel.Font = Enum.Font.SourceSansBold

        local lblFOVValue = newLabel("FOV: 100", UDim2.new(0, 175, 0, 60))

        -- Strength Slider as Button
        local strengthBarBtn = Instance.new("TextButton", panel)
        strengthBarBtn.Size = UDim2.new(0, 300, 0, 32)
        strengthBarBtn.Position = UDim2.new(0, 5, 0, 280)
        strengthBarBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        strengthBarBtn.BorderSizePixel = 0
        strengthBarBtn.Text = ""
        strengthBarBtn.AutoButtonColor = false

        local outline = Instance.new("UIStroke", strengthBarBtn)
        outline.Color = Color3.fromRGB(180, 180, 180)
        outline.Thickness = 2

        local strengthLabel = Instance.new("TextLabel", strengthBarBtn)
        strengthLabel.Size = UDim2.new(0, 70, 1, 0)
        strengthLabel.Position = UDim2.new(0, 10, 0, 0)
        strengthLabel.BackgroundTransparency = 1
        strengthLabel.Text = "Strength"
        strengthLabel.Font = Enum.Font.SourceSansBold
        strengthLabel.TextColor3 = Color3.new(1,1,1)
        strengthLabel.TextSize = 16
        strengthLabel.TextXAlignment = Enum.TextXAlignment.Left

        local fillBar = Instance.new("Frame", strengthBarBtn)
        fillBar.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        fillBar.BorderSizePixel = 0
        fillBar.Position = UDim2.new(0, 90, 0.5, -8)
        fillBar.Size = UDim2.new(0, 200*(aimStrength-strengthMin)/(strengthMax-strengthMin), 0, 16)

        local valueLabel = Instance.new("TextLabel", strengthBarBtn)
        valueLabel.Size = UDim2.new(0, 50, 1, 0)
        valueLabel.Position = UDim2.new(1, -60, 0, 0)
        valueLabel.BackgroundTransparency = 1
        valueLabel.Text = tostring(aimStrength)
        valueLabel.Font = Enum.Font.SourceSansBold
        valueLabel.TextColor3 = Color3.new(1,1,1)
        valueLabel.TextXAlignment = Enum.TextXAlignment.Right
        valueLabel.TextSize = 16

        local function updateStrengthBar()
            local percent = (aimStrength-strengthMin)/(strengthMax-strengthMin)
            fillBar.Size = UDim2.new(0, 200*percent, 0, 16)
            valueLabel.Text = tostring(aimStrength)
        end

        updateStrengthBar()

        strengthBarBtn.MouseButton1Down:Connect(function(x, y)
            local relX = x - strengthBarBtn.AbsolutePosition.X - 90
            local barWidth = 200
            local percent = math.clamp(relX/barWidth, 0, 1)
            aimStrength = math.floor((strengthMin + (strengthMax-strengthMin)*percent)*100)/100
            updateStrengthBar()
        end)

        strengthBarBtn.ZIndex = 10
        fillBar.ZIndex = 11
        strengthLabel.ZIndex = 12
        valueLabel.ZIndex = 12

        -- Prioritize Button
        local prioritizeBtn = Instance.new("TextButton", panel)
        prioritizeBtn.Size = UDim2.new(0, 300, 0, 32)
        prioritizeBtn.Position = UDim2.new(0, 5, 0, 320)
        prioritizeBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        prioritizeBtn.BorderSizePixel = 0
        prioritizeBtn.Text = ""
        prioritizeBtn.AutoButtonColor = false

        local prioritizeOutline = Instance.new("UIStroke", prioritizeBtn)
        prioritizeOutline.Color = Color3.fromRGB(180, 180, 180)
        prioritizeOutline.Thickness = 2

        local prioritizeLabel = Instance.new("TextLabel", prioritizeBtn)
        prioritizeLabel.Size = UDim2.new(1, 0, 1, 0)
        prioritizeLabel.Position = UDim2.new(0, 0, 0, 0)
        prioritizeLabel.BackgroundTransparency = 1
        prioritizeLabel.Text = "Prioritize: " .. prioritizeModes[prioritizeIndex]
        prioritizeLabel.Font = Enum.Font.SourceSansBold
        prioritizeLabel.TextColor3 = Color3.new(1,1,1)
        prioritizeLabel.TextSize = 16
        prioritizeLabel.TextXAlignment = Enum.TextXAlignment.Center

        prioritizeBtn.MouseButton1Click:Connect(function()
            prioritizeIndex = prioritizeIndex % #prioritizeModes + 1
            prioritizeLabel.Text = "Prioritize: " .. prioritizeModes[prioritizeIndex]
        end)

        -- Prediction slider as button
        local predictionBarBtn = Instance.new("TextButton", panel)
        predictionBarBtn.Size = UDim2.new(0, 300, 0, 32)
        predictionBarBtn.Position = UDim2.new(0, 5, 0, 360)
        predictionBarBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        predictionBarBtn.BorderSizePixel = 0
        predictionBarBtn.Text = ""
        predictionBarBtn.AutoButtonColor = false

        local predictionOutline = Instance.new("UIStroke", predictionBarBtn)
        predictionOutline.Color = Color3.fromRGB(180, 180, 180)
        predictionOutline.Thickness = 2

        local predictionLabel = Instance.new("TextLabel", predictionBarBtn)
        predictionLabel.Size = UDim2.new(0, 110, 1, 0)
        predictionLabel.Position = UDim2.new(0, 10, 0, 0)
        predictionLabel.BackgroundTransparency = 1
        predictionLabel.Text = "Prediction"
        predictionLabel.Font = Enum.Font.SourceSansBold
        predictionLabel.TextColor3 = Color3.new(1,1,1)
        predictionLabel.TextSize = 16
        predictionLabel.TextXAlignment = Enum.TextXAlignment.Left

        local predictionFillBar = Instance.new("Frame", predictionBarBtn)
        predictionFillBar.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
        predictionFillBar.BorderSizePixel = 0
        predictionFillBar.Position = UDim2.new(0, 130, 0.5, -8)
        predictionFillBar.Size = UDim2.new(0, 160*(predictionStrength/predictionMax), 0, 16)

        local predictionValueLabel = Instance.new("TextLabel", predictionBarBtn)
        predictionValueLabel.Size = UDim2.new(0, 50, 1, 0)
        predictionValueLabel.Position = UDim2.new(1, -60, 0, 0)
        predictionValueLabel.BackgroundTransparency = 1
        predictionValueLabel.Text = tostring(predictionStrength)
        predictionValueLabel.Font = Enum.Font.SourceSansBold
        predictionValueLabel.TextColor3 = Color3.new(1,1,1)
        predictionValueLabel.TextXAlignment = Enum.TextXAlignment.Right
        predictionValueLabel.TextSize = 16

        local function updatePredictionBar()
            local percent = (predictionStrength-predictionMin)/(predictionMax-predictionMin)
            predictionFillBar.Size = UDim2.new(0, 160*percent, 0, 16)
            predictionValueLabel.Text = tostring(predictionStrength)
        end

        updatePredictionBar()

        predictionBarBtn.MouseButton1Down:Connect(function(x, y)
            local relX = x - predictionBarBtn.AbsolutePosition.X - 130
            local barWidth = 160
            local percent = math.clamp(relX/barWidth, 0, 1)
            predictionStrength = math.floor((predictionMin + (predictionMax-predictionMin)*percent)*100)/100
            updatePredictionBar()
        end)

        predictionBarBtn.ZIndex = 10
        predictionFillBar.ZIndex = 11
        predictionLabel.ZIndex = 12
        predictionValueLabel.ZIndex = 12

        -- Botão restaurar (círculo roxo com "L" branco)
        local btnRes = Instance.new("ImageButton", gui)
        btnRes.Name = "btnRestore"
        btnRes.Size = UDim2.new(0, 30, 0, 30)
        btnRes.Position = UDim2.new(0, 10, 0, 10)
        btnRes.BackgroundTransparency = 1
        btnRes.Visible = false

        local resCircle = Instance.new("Frame", btnRes)
        resCircle.AnchorPoint = Vector2.new(0.5, 0.5)
        resCircle.Position = UDim2.new(0.5, 0, 0.5, 0)
        resCircle.Size = UDim2.new(1, 0, 1, 0)
        resCircle.BackgroundColor3 = Color3.fromRGB(120, 0, 255)
        resCircle.BorderSizePixel = 0
        local resCorner = Instance.new("UICorner", resCircle)
        resCorner.CornerRadius = UDim.new(1, 0)

        local resLabel = Instance.new("TextLabel", btnRes)
        resLabel.AnchorPoint = Vector2.new(0.5, 0.5)
        resLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
        resLabel.Size = UDim2.new(1, 0, 1, 0)
        resLabel.BackgroundTransparency = 1
        resLabel.Text = "L"
        resLabel.TextColor3 = Color3.new(1, 1, 1)
        resLabel.TextScaled = true
        resLabel.Font = Enum.Font.SourceSansBold

        -- Minimizar/maximizar lógica
        btnMin.MouseButton1Click:Connect(function()
            mainContainer.Visible = false
            btnRes.Visible = true
        end)
        btnRes.MouseButton1Click:Connect(function()
            mainContainer.Visible = true
            btnRes.Visible = false
        end)

        local circle = Drawing and Drawing.new and Drawing.new("Circle")
        if circle then
            circle.Thickness = 1.0
            circle.Filled = false
            circle.Radius = FOV_RADIUS
            circle.Color = Color3.new(1, 1, 0)
            circle.Visible = false
        end

        -- Prioritization
        local function getClosestPlayer()
            local candidates = {}
            local center = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
            for _, player in ipairs(Players:GetPlayers()) do
                if player == LocalPlayer then continue end
                if isPlayerDead(player) then continue end
                if teamCheck and player.Team == LocalPlayer.Team then continue end
                if player.Character and player.Character:FindFirstChild(aimPart) then
                    local part = player.Character[aimPart]
                    local pos, onScreen = Camera:WorldToViewportPoint(part.Position)
                    local distance = (Vector2.new(pos.X, pos.Y) - center).Magnitude
                    local hp = player.Character:FindFirstChildOfClass("Humanoid") and player.Character:FindFirstChildOfClass("Humanoid").Health or 100
                    if (temporaryNoFOV or (onScreen and distance <= FOV_RADIUS)) and isVisible(part) then
                        table.insert(candidates, {
                            player = player,
                            distance = distance,
                            hp = hp,
                            part = part,
                            pos = pos
                        })
                    end
                end
            end

            local mode = prioritizeModes[prioritizeIndex]
            if mode == "default" then
                local closestPlayer, closestDistance = nil, FOV_RADIUS
                for _, c in ipairs(candidates) do
                    if c.distance < closestDistance then
                        closestPlayer = c.player
                        closestDistance = c.distance
                    end
                end
                return closestPlayer
            elseif mode == "nearest" then
                table.sort(candidates, function(a, b) return a.distance < b.distance end)
            elseif mode == "low hp" then
                table.sort(candidates, function(a, b)
                    if a.hp == b.hp then return a.distance < b.distance end
                    return a.hp < b.hp
                end)
            elseif mode == "high hp" then
                local maxHP = nil
                for _, c in ipairs(candidates) do
                    if not maxHP or c.hp > maxHP then maxHP = c.hp end
                end
                local maxCandidates = {}
                for _, c in ipairs(candidates) do
                    if c.hp == maxHP then
                        table.insert(maxCandidates, c)
                    end
                end
                table.sort(maxCandidates, function(a, b) return a.distance < b.distance end)
                candidates = maxCandidates
            end
            return #candidates > 0 and candidates[1].player or nil
        end

        local espMenuLoaded = false
        local espMenuGui
        btnEspMenu.MouseButton1Click:Connect(function()
            local originalSize = btnEspMenu.Size
            local originalPos = btnEspMenu.Position
            
            TweenService:Create(btnEspMenu, TweenInfo.new(0.1), {
                Size = UDim2.new(0, 290, 0, 28),
                Position = UDim2.new(0, 10, 0, 241)
            }):Play()
            
            wait(0.1)
            
            TweenService:Create(btnEspMenu, TweenInfo.new(0.1), {
                Size = originalSize,
                Position = originalPos
            }):Play()
            
            if not espMenuLoaded then
                espMenuLoaded = true
                local success, err = pcall(function()
                    local espMenuScript = game:HttpGet("https://pastebin.com/raw/qBZHFF23")
                    espMenuGui = loadstring(espMenuScript)()
                    if espMenuGui then
                        espMenuGui.Parent = game.CoreGui
                        espMenuGui.ResetOnSpawn = false
                        espMenuGui.Enabled = false
                    end
                end)
                if not success then
                    createRobloxNotification("Failed to load ESP Menu", Color3.fromRGB(255, 0, 0))
                    warn("ESP Menu Error: " .. err)
                    espMenuLoaded = false
                end
            end
            
            if espMenuGui then
                espMenuGui.Enabled = not espMenuGui.Enabled
                createRobloxNotification(espMenuGui.Enabled and "ESP Menu OPENED" or "ESP Menu CLOSED", 
                                       Color3.fromRGB(0, 120, 255))
            end
        end)

        btnFullbright.MouseButton1Click:Connect(function()
            if not fullbrightOn then
                origLighting = {
                    Ambient = Lighting.Ambient,
                    Brightness = Lighting.Brightness,
                    ColorShift_Bottom = Lighting.ColorShift_Bottom,
                    ColorShift_Top = Lighting.ColorShift_Top,
                    OutdoorAmbient = Lighting.OutdoorAmbient,
                    FogEnd = Lighting.FogEnd
                }
                for k,v in pairs(fullbrightSettings) do
                    Lighting[k] = v
                end
                btnFullbright.Text = "Fullbright: ON"
                btnFullbright.BackgroundColor3 = Color3.fromRGB(255, 175, 50)
                createRobloxNotification("Fullbright enabled!", Color3.fromRGB(255, 255, 120))
            else
                for k,v in pairs(origLighting) do
                    Lighting[k] = v
                end
                btnFullbright.Text = "Fullbright: OFF"
                btnFullbright.BackgroundColor3 = Color3.fromRGB(190, 140, 90)
                createRobloxNotification("Fullbright disabled!", Color3.fromRGB(140, 140, 140))
            end
            fullbrightOn = not fullbrightOn
        end)

        local function updateButtons()
            local function cor(botao, cond)
                botao.BackgroundColor3 = cond and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(40, 40, 40)
            end
            btnAim.Text = "Aimbot: " .. (aiming and "ON" or "OFF")
            btnFOV.Text = "FOV: " .. (showFOV and "ON" or "OFF")
            btnSoft.Text = "Soft: " .. (softMode and "ON" or "OFF")
            btnWall.Text = "Wall: " .. (wallCheck and "ON" or "OFF")
            btnTeam.Text = "Team Check: " .. (teamCheck and "ON" or "OFF")
            btnFullbright.BackgroundColor3 = fullbrightOn and Color3.fromRGB(255, 175, 50) or Color3.fromRGB(190, 140, 90)
            btnFullbright.Text = "Fullbright: " .. (fullbrightOn and "ON" or "OFF")
            btnRainbowFOV.Text = "Rainbow FOV: " .. (rainbowFOV and "ON" or "OFF")
            btnInstantAim.Text = "Instant Aim: " .. (instantAim and "ON" or "OFF")
            lblFOVValue.Text = "FOV: " .. FOV_RADIUS
            updateStrengthBar()
            updatePredictionBar()
            prioritizeLabel.Text = "Prioritize: " .. prioritizeModes[prioritizeIndex]
            cor(btnAim, aiming)
            cor(btnFOV, showFOV)
            cor(btnSoft, softMode)
            cor(btnWall, wallCheck)
            cor(btnTeam, teamCheck)
            cor(btnRainbowFOV, rainbowFOV)
            cor(btnInstantAim, instantAim)
            cor(btnHead, aimPart == "Head")
            cor(btnTorso, aimPart == "Torso")
            cor(btnHRP, aimPart == "HumanoidRootPart")
        end
        
        btnAim.MouseButton1Click:Connect(function()
            aiming = not aiming
            updateButtons()
            createRobloxNotification(aiming and "Aimbot ACTIVATED" or "Aimbot DEACTIVATED", 
                                   aiming and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0))
        end)
        btnFOV.MouseButton1Click:Connect(function() 
            showFOV = not showFOV 
            updateButtons() 
        end)
        btnSoft.MouseButton1Click:Connect(function() 
            softMode = not softMode 
            updateButtons() 
        end)
        btnWall.MouseButton1Click:Connect(function() 
            wallCheck = not wallCheck 
            updateButtons() 
        end)
        btnTeam.MouseButton1Click:Connect(function() 
            teamCheck = not teamCheck 
            updateButtons() 
        end)
        btnRainbowFOV.MouseButton1Click:Connect(function()
            rainbowFOV = not rainbowFOV
            updateButtons()
        end)
        btnInstantAim.MouseButton1Click:Connect(function()
            instantAim = not instantAim
            updateButtons()
            createRobloxNotification(instantAim and "Instant Aim ACTIVATED" or "Instant Aim DEACTIVATED",
                                  instantAim and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(170, 0, 0))
        end)
        btnFOVPlus.MouseButton1Click:Connect(function() 
            FOV_RADIUS += 10 
            updateButtons() 
        end)
        btnFOVMinus.MouseButton1Click:Connect(function() 
            FOV_RADIUS = math.max(10, FOV_RADIUS - 10) 
            updateButtons() 
        end)
        btnHead.MouseButton1Click:Connect(function() 
            aimPart = "Head" 
            updateButtons() 
        end)
        btnTorso.MouseButton1Click:Connect(function() 
            aimPart = "Torso" 
            updateButtons() 
        end)
        btnHRP.MouseButton1Click:Connect(function() 
            aimPart = "HumanoidRootPart" 
            updateButtons() 
        end)

        -- Dragging functionality (funciona em mobile e pc)
        do
            local dragging, dragStart, startPos
            local function update(input)
                local delta = input.Position - dragStart
                mainContainer.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
            mainContainer.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = mainContainer.Position
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then dragging = false end
                    end)
                end
            end)
            UIS.InputChanged:Connect(function(input)
                if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                    update(input)
                end
            end)
        end

        btnMin.MouseButton1Click:Connect(function()
            mainContainer.Visible = false
            btnRes.Visible = true
        end)
        btnRes.MouseButton1Click:Connect(function()
            mainContainer.Visible = true
            btnRes.Visible = false
        end)
        
        RunService.RenderStepped:Connect(function()
            if circle then
                if rainbowFOV then
                    hue = (hue + 0.01) % 1
                    circle.Color = Color3.fromHSV(hue, 1, 1)
                else
                    circle.Color = Color3.new(1, 1, 0)
                end
                if showFOV then
                    circle.Visible = true
                    circle.Position = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
                    circle.Radius = FOV_RADIUS
                else
                    circle.Visible = false
                end
            end
            if aiming then
                local closestPlayer = getClosestPlayer()
                if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild(aimPart) then
                    local targetPart = closestPlayer.Character[aimPart]
                    -- Prediction (posição futura)
                    local predictedPos = targetPart.Position
                    local root = closestPlayer.Character:FindFirstChild("HumanoidRootPart")
                    if predictionStrength > 0 and root then
                        local velocity = root.Velocity
                        predictedPos = targetPart.Position + (velocity * predictionStrength)
                    end
                    if instantAim and lastTarget and lastTarget == closestPlayer and isPlayerDead(closestPlayer) then
                        temporaryNoFOV = true
                        closestPlayer = getClosestPlayer()
                        temporaryNoFOV = false
                        if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild(aimPart) then
                            targetPart = closestPlayer.Character[aimPart]
                        end
                    end
                    if targetPart and not isPlayerDead(closestPlayer) then
                        local camPos = Camera.CFrame.Position
                        local dir = (predictedPos - camPos).Unit
                        local look = softMode and Camera.CFrame.LookVector:Lerp(dir, aimStrength).Unit or dir
                        Camera.CFrame = CFrame.new(camPos, camPos + look)
                        lastTarget = closestPlayer
                    end
                end
            end
        end)

        -- Credits
        local credits = Instance.new("TextLabel", panel)
        credits.Size = UDim2.new(1, 0, 0, 20)
        credits.Position = UDim2.new(0, 0, 1, -20)
        credits.Text = "made by lalala"
        credits.TextColor3 = Color3.new(1, 1, 1)
        credits.BackgroundTransparency = 1
        credits.Font = Enum.Font.SourceSans
        credits.TextSize = 14
        credits.TextXAlignment = Enum.TextXAlignment.Center

        updateButtons()
    else
        local originalPos = keyBox.Position
        for i = 1, 3 do
            keyBox.Position = UDim2.new(0, 25, 0, 50)
            wait(0.05)
            keyBox.Position = UDim2.new(0, 15, 0, 50)
            wait(0.05)
        end
        keyBox.Position = originalPos
        keyBox.Text = ""
        keyBox.PlaceholderText = "Wrong Key! Try Again"
    end
end)
